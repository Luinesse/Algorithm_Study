1. 문제 인식

수열의 크기 n과 수열에 포함되는 수를 입력받습니다. 그리고 수열의 값 두개를 더해서 찾아야할 결과값인 x를 입력받아 이 조건을 만족하는 쌍의 개수를 구하는 문제입니다.

2. 문제 유형 파악

N이 최대 10만으로 주어지고, 시간제한이 1초이므로 이중 for문을 사용하여 쌍을 구하는건 O(N^2)로 1초안에 문제를 해결할 수 없습니다. 따라서, 투포인터를 활용해 배열을 한번씩만 참조하는 방법으로 문제를 해결합니다.

3. 다이어그램 또는 알고리즘을 나열

    1) 수열의 크기를 담을 n, 조건 결과값인 x, 결과를 담을 res 변수를 선언한다. 이때, res는 0으로 초기화한다.
    2) n을 입력받고 n크기의 arr 정수형 배열을 선언한다.
    3) i가 0부터 n-1까지 증가하며 반복하는 반복문에서 arr[i]에 수를 입력받는다.
    4) x를 입력받는다.
    5) arr배열을 퀵정렬을 통해 오름차순 정렬해준다. (오름차순 정렬이 안될 경우, 가장 작은 수와 가장 큰 수와의 합을 계산 못하는 경우가 생겨 반례가 생김.)
    6) 배열의 왼쪽 시작 인덱스를 저장할 lp, 오른쪽 시작 인덱스를 저장할 rp를 선언한다. 여기서 lp는 0으로 초기화, rp는 n-1로 초기화한다.
    7) lp가 rp보다 작을 때, 다음을 반복한다.
        (1) arr[lp] + arr[rp]가 x보다 작다면 lp를 1 증가시킨다. (이 조건에서 걸렸다면, lp가 가리키는 값은 어떠한 경우에도 x와 같을 수 없으므로 다음으로 작은 값으로 이동.)
        (2) (1)의 조건에서 부합하지 못했고, arr[lp] + arr[rp]가 x보다 크다면 rp를 1 감소시킨다. (이 조건에서 걸렸다면 rp가 가리키는 값은 어떠한 경우에도 x와 같을 수 없으므로 다음으로 큰 값으로 이동.)
        (3) (1),(2) 둘다 부합하지 못했다면 lp를 1 증가시키고 rp를 1 감소시킨다. 그리고 res는 1 증가시킨다. (1과 2의 조건에 부합하지 않는다면 arr[lp] + arr[rp] = x)
    8) 결과값인 res를 출력한다.