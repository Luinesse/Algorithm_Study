1. 문제 인식

입력으로 명령의 수 N개가 주어지고, N개의 명령을 입력받아 덱 명령을 수행하는 문제입니다.

2. 문제 유형 파악

선형 자료구조에서 front와 rear 둘 다에서 push,pop을 수행해야하는 자료구조는 덱이 있으므로 덱으로 문제를 해결할 수 있습니다.

3. 다이어그램 또는 알고리즘을 나열

    1) 명령의 수 N을 입력받음.
    2) N만큼 반복문을 돌며 아래 내용을 반복함
        (1) 명령어를 입력받는다.
        (2) 받은 명령어가 push_front 라면, front에 push할 정수를 입력받고 push_front를 수행한다.
        (3) (2)의 조건에서 부합하지 못했다면, 받은 명령어가 push_back인지 검사하고 맞다면 back에 push할 정수를 입력받고 push_back을 수행한다.
        (4) (3)의 조건에서 부합하지 못했다면, 받은 명령어가 pop_front인지 검사하고 맞다면 다음 조건을 검사한다.
            1. 덱이 비어있다면 -1을 출력한다.
            2. 덱이 비어있지 않다면 front의 값을 출력하고 pop_front를 수행한다.
        (5) (4)의 조건에서 부합하지 못했다면, 받은 명령어가 pop_back인지 검사하고 맞다면 다음 조건을 검사한다.
            1. 덱이 비어있다면 -1을 출력한다.
            2. 덱이 비어있지 않다면 back의 값을 출력하고 pop_back을 수행한다.
        (6) (5)의 조건에서 부합하지 못했다면, 받은 명령어가 size인지 검사하고 맞다면 덱의 사이즈를 출력한다.
        (7) (6)의 조건에서 부합하지 못했다면, 받은 명령어가 empty인지 검사하고 맞다면 다음 조건을 검사한다.
            1. 덱이 비어있다면 1을 출력한다.
            2. 덱이 비어있지 않다면 0을 출력한다.
        (8) (7)의 조건에서 부합하지 못했다면, 받은 명령어가 front인지 검사하고 맞다면 다음 조건을 검사한다.
            1. 덱이 비어있다면 -1을 출력한다.
            2. 덱이 비어있지 않다면 덱의 front를 출력한다.
        (9) (8)의 조건에서 부합하지 못했다면, 받은 명령어가 back인지 검사하고 맞다면 다음 조건을 검사한다.
            1. 덱이 비어있다면 -1을 출력한다.
            2. 덱이 비어있지 않다면 덱의 back을 출력한다.