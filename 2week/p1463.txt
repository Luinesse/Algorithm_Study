1. 문제 인식

정수 n이 주어졌을 때, 다음 세 연산을 사용하여 1을 만든다. 이때, 연산 사용 횟수의 최소값을 찾아서 출력하는 문제입니다.

1. n 이 3으로 나누어 떨어진다면, 3으로 나눈다.
2. n 이 2로 나누어 떨어진다면, 2로 나눈다.
3. 1을 뺀다

2. 문제 유형 파악

n이 1이되는 최소 연산 사용 횟수는 위 세 연산을 사용했을 때, 나오는 수가 1이 되는 최소 연산 횟수를 찾아두면 그 값에 +1 하면 n의 최소 연산 횟수를 찾을 수 있으므로 아래에서 올라오는 방식의 다이나믹 프로그래밍으로 문제를 해결합니다.

3. 다이어그램 또는 알고리즘을 나열

    1) 각 정수의 최소 연산 결과를 담을 dp배열 생성.
    2) 정수 n을 입력받음.
    3) i가 2부터 n까지 증가하는 반복문에서 다음내용을 반복함. (1은 이미 1이기 떄문에 최소 연산 횟수가 0이므로 2부터 시작)
        (1) dp[i] 에 dp[i - 1] + 1을 할당함. (1을 빼는 연산을 수행. 왜냐하면 dp[i - 1]은 i-1 값에서 최소 연산 결과이므로 이 값에 +1을 하면 i의 연산 결과)
        (2) i가 2로 나누어 떨어진다면 dp[i]와 dp[i/2] + 1의 값을 비교하여 더 작은값을 dp[i]에 할당함.
        (3) i가 3으로 나누어 떨어진다면 dp[i]와 dp[i/3] + 1의 값을 비교하여 더 작은값을 dp[i]에 할당함.
    4) dp[n]을 출력함.