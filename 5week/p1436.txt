1. 문제 인식

666이라는 숫자가 3개이상 연속으로 들어가는 숫자 중 n번째로 작은 숫자를 찾아 출력하는 문제입니다.

2. 문제 유형 파악

시간 제한이 2초이고, n이 10000까지 주어지는 걸로 볼때 O(N^2) 까지 사용이 가능하다는 것을 확인할 수 있습니다.
따라서, n까지 모든 숫자의 경우를 다 구해도 시간안에 문제가 풀리므로, 브루트포스 알고리즘을 사용하여 문제를 해결합니다.

3. 다이어그램 또는 알고리즘을 나열

    1) n과, 결과값을 저장할 i, 결과를 찾기위한 임시저장소인 tmp, 반복문의 탈출을 위한 cnt 정수형 변수들을 선언한다. 이때, i와 cnt는 0으로 초기화한다.
    2) n을 입력받는다.
    3) n이 cnt와 같지 않다면 반복하는 반복문에서 다음을 반복한다.
        (1) i에 1을 더한 값을 i에 저장한다.
        (2) tmp에 i를 대입한다.
        (3) tmp가 0이 아니라면 반복하는 반복문에서 다음을 반복한다.
            [1] tmp 를 1000으로 나눈 나머지가 666이라면 cnt를 1 증가하고 반복문을 탈출한다.     (6이 최소 3개 이상 연속으로 들어가야 하기 때문에 1000으로 나눈 나머지를 검사.)
            [2] [1]의 조건에서 부합하지 않았다면, tmp를 10으로 나눈 값을 tmp에 저장한다.        (10으로 나누어 가면서 6이 3개 이상 들어가있는지 검사함. -> 소수점위치를 왼쪽으로 옮겨가며 검사하는 거랑 동일.)
    4) i를 출력한다.