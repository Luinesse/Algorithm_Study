1. 문제 인식

n가지 종류의 동전이 주어졌을때, 이 동전들의 가치의 합이 k원이 되도록 할때, 모든 경우의 수를 구하는 문제입니다.

2. 문제 유형 파악

문제에서 예제로 주어진 입력 n = 3, k = 10, 1, 2, 3으로 표를 그려볼때,

n/k 1 2 3 4 5 6 7 8 9 10
1   1 1 1 1 1 1 1 1 1 1
2   1 2 2 3 3 4 4 5 5 6
5   1 2 2 3 4 5 6 7 8 10

과 같은 표가 구해진다. 여기서 dp[n](새로운 값) = dp[n](이전 값) + dp[n - 현재 동전의 크기] 라는 점화식을 구할 수 있다.
ex) dp[6] = dp[6](4) + dp[6 - 5](1)
          = 4 + 1
          = 5

따라서, 이 문제는 다이나믹 프로그래밍 방식으로 해결합니다.

3. 다이어그램 또는 알고리즘을 나열

    1) n, k를 입력받는다.
    2) n의 크기를 가지는 coin[n] 정수형 배열을 선언한다.
    3) i가 1부터 n까지 증가하며 반복하는 반복문에서 coin[i]를 입력받는다.
    4) dp[0] 을 1로 초기화한다. (0원을 만드는 경우의 수는 아무 동전도 쓰지 않는 경우이기 때문에 1)
    5) i가 1부터 n까지 증가하며 반복하는 반복문에서 다음을 반복한다.
        (1) j가 coin[i]부터 k까지 증가하며 반복하는 반복문에서 다음을 반복한다.
            [1] dp[j]에 dp[j] + dp[j - coin[i]]의 값을 대입한다. (점화식 부분)
    6) dp[k]를 출력한다.