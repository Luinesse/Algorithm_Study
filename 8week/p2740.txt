1. 문제 인식

N*M 크기의 행렬과 M*K 크기의 행렬이 주어졌을 때, 이 두 행렬을 곱한 결과를 출력하는 문제입니다.

2. 문제 유형 파악

행렬곱 식을 그대로 반영하여 코드를 작성합니다. O(N^3)의 시간복잡도를 가지지만, N이 최대 100으로 주어지므로, 시간초과가 발생하지 않습니다.

3. 다이어그램 또는 알고리즘을 나열

    1) 행렬을 저장할 2차원배열 matA, matB, 결과를 저장할 2차원 배열 res을 선언합니다.
    2) 행렬의 사이즈를 저장할 n, m, k를 선언합니다.
    3) n, m을 입력받습니다.
    4) i가 0부터 n-1 까지 증가하며 반복하는 반복문에서 다음을 반복합니다.
        (1) j가 0부터 m-1 까지 증가하며 반복하는 반복문에서 다음을 반복합니다.
            [1] matA[i][j]를 입력받습니다.
    5) m, k를 입력받습니다.
    6) i가 0부터 m-1 까지 증가하며 반복하는 반복문에서 다음을 반복합니다.
        (1) j가 0부터 k-1 까지 증가하며 반복하는 반복문에서 다음을 반복합니다.
            [1] matB[i][j]를 입력받습니다.
    7) i가 n-1 까지 증가하며 반복하는 반복문에서 다음을 반복합니다.
        (1) j가 0부터 k-1 까지 증가하며 반복하는 반복문에서 다음을 반복합니다.
            [1] l이 0부터 m-1 까지 증가하며 반복하는 반복문에서 다음을 반복합니다.
                1. res[i][j] 에 matA[i][l] * matB[l][j] 를 더합니다.
            [2] res[i][j]를 출력합니다.
        (2) 개행문자를 출력합니다.